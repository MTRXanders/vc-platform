name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - passed-ci-*

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Deploy
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' || contains(github.event.pull_request.labels.*.name, 'testing') }}
    env:
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}
    steps:
    - uses: actions/checkout@v2

    - name: Get Image Tag
      uses: VirtoCommerce/vc-github-actions/get-image-tag@master
      id: image

    - name: Setup Kustomize
      uses: imranismail/setup-kustomize@v1
      with:
        kustomize-version: "3.1.0"

    - name: Start deployment
      uses: bobheadxi/deployments@master
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: Development
        no_override: false

    - name: Commit environment change
      shell: pwsh
      run: |
        cd ${{ github.workspace }}
        git clone https://github.com/VirtoCommerce/vc-deploy-apps.git
        cd vc-deploy-apps/webstore-dev-app/overlays/dev

        $REPOSITORY = "docker.pkg.github.com/$('${{ github.repository }}'.ToLower())"
        kustomize edit set image virtocommerce/platform=$REPOSITORY/platform:${{ steps.image.outputs.tag }}

        git config user.email "test@virtoway.com"
        git config user.name "GitHub Actions"

        git add .
        git commit -m "Update the platform image version to $($version)"

        $remoteRepo="https://${{ github.actor }}:${{ secrets.REPO_TOKEN }}@github.com/VirtoCommerce/vc-deploy-apps.git"

        git push $remoteRepo

    - name: Sync environment
      shell: pwsh
      env:
        ARGOCD_SERVER: cd.govirto.com
        ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
      run: |
        cd ${{ github.workspace }}

        $latestVersion = (Invoke-WebRequest -Uri "https://api.github.com/repos/argoproj/argo-cd/releases/latest" | ConvertFrom-Json).tag_name
        Invoke-WebRequest -Uri "https://github.com/argoproj/argo-cd/releases/download/$($latestVersion)/argocd-linux-amd64" -OutFile argocd
        chmod +x argocd
        ./argocd app sync webstore-dev-app --grpc-web --async
        # ./argocd app wait webstore-dev-app --grpc-web # Doesn't work properly. Use workaround
        
        do {
          $appInfo = ./argocd app get webstore-dev-app --grpc-web

          Write-Host $appInfo
          
          $syncedUp = $appInfo.Contains("Health Status:      Healthy")
          
          if (-not $syncedUp) {
            Write-Host "Sync pending..."
          }
        }
        while (-not $syncedUp)


        echo "::set-env name=BUILD_STATE::successful"

    - name: Failed Build
      if: failure()
      run: echo "::set-env name=BUILD_STATE::failed"

    - name: Update GitHub deployment status
      uses: bobheadxi/deployments@master
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Parse Jira Keys from All Commits
      id: jira_keys
      if: always()
      uses: HighwayThree/jira-extract-issue-keys@master
      with:
        is-pull-request: ${{ github.event_name == 'pull_request' }}
        parse-all-commits: ${{ github.event_name == 'push' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Push Deployment Info to Jira
      if: ${{ steps.jira_keys.outputs.jira-keys != '' && always() }}
      id: push_deployment_info_to_jira
      uses: HighwayThree/jira-upload-deployment-info@master
      with:
        cloud-instance-base-url: '${{ secrets.CLOUD_INSTANCE_BASE_URL }}'
        client-id: '${{ secrets.CLIENT_ID }}'
        client-secret: '${{ secrets.CLIENT_SECRET }}'
        deployment-sequence-number: '${{ github.run_id }}'
        update-sequence-number: '${{ github.run_id }}'
        issue-keys: "${{ steps.jira_keys.outputs.jira-keys }}"
        display-name: "http://platform-platform.dev.govirto.com/f"
        url: "http://platform-platform.dev.govirto.com/"
        description: "Deployment to the Development environment"
        last-updated: '${{github.event.head_commit.timestamp}}'
        state: "${{ env.BUILD_STATE }}"
        pipeline-id: '${{ github.repository }} ${{ github.workflow }}'
        pipeline-display-name: 'Workflow: ${{ github.workflow }} (#${{ github.run_number }})'
        pipeline-url: '${{github.event.repository.html_url}}/actions/runs/${{github.run_id}}'
        environment-id: 'development'
        environment-display-name: 'Dev'
        environment-type: 'development'